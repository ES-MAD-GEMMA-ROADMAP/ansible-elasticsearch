---

- name: Set es_major_version
  ansible.builtin.set_fact:
    es_major_version: "{{ es_version.split('.')[0] }}.x"
  when:
    - es_major_version is undefined
  tags:
    - always

- name: Os-specific vars
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"
  tags:
    - always

- name: Set compatibility variables
  ansible.builtin.include_tasks: compatibility-variables.yml
  tags:
    - always

- name: Check-set-parameters
  ansible.builtin.include_tasks: elasticsearch-parameters.yml
  tags:
    - always

- name: Use snapshot release
  ansible.builtin.include_tasks: snapshot-release.yml
  when: es_use_snapshot_release

- name: Include java.yml
  ansible.builtin.include_tasks: java.yml
  when: es_java_install
  tags:
    - java

- name: Include elasticsearch.yml
  ansible.builtin.include_tasks: elasticsearch.yml
  tags:
    - install

- name: Include elasticsearch-config.yml
  ansible.builtin.include_tasks: elasticsearch-config.yml
  tags:
    - config

- name: Include elasticsearch-plugins.yml
  ansible.builtin.include_tasks: elasticsearch-plugins.yml
  when: es_plugins is defined or es_plugins_reinstall
  tags:
    - plugins

  # We always execute xpack as we may need to remove features
- name: Include xpack/elasticsearch-xpack.yml
  ansible.builtin.include_tasks: xpack/elasticsearch-xpack.yml
  tags:
    - xpack

- name: Include elasticsearch-ssl.yml
  ansible.builtin.include_tasks: elasticsearch-ssl.yml
  when: es_enable_http_ssl or es_enable_transport_ssl
  tags:
    - xpack

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Make sure elasticsearch is started
  become: true
  ansible.builtin.service:
    name: elasticsearch
    state: started
    enabled: true
  when: es_start_service

- name: Wait for elasticsearch to startup
  ansible.builtin.wait_for:
    host: "{{ es_api_host }}"
    port: "{{ es_api_port }}"
    delay: 5
    connect_timeout: 1
  when: es_restarted is defined and es_restarted.changed and es_start_service

- name: Set fact manage_native_realm to false
  ansible.builtin.set_fact:
    manage_native_realm: false

- name: Set fact manage_native_realm to true
  ansible.builtin.set_fact:
    manage_native_realm: true
  when:
    - es_start_service
    - not oss_version
    - (es_users is defined and es_users.native is defined) or (es_roles is defined and es_roles.native is defined)

# If playbook runs too fast, Native commands could fail as the Native Realm is not yet up
- name: Wait for the Native Realm to come up
  ansible.builtin.wait_for:
    timeout: "{{ es_api_sleep }}"
  when: manage_native_realm | bool

- name: Activate-license
  ansible.builtin.include_tasks: ./xpack/security/elasticsearch-xpack-activation.yml
  when: es_start_service and not oss_version and es_xpack_license is defined and es_xpack_license != ''
  run_once: true

- name: Activate-trial
  ansible.builtin.include_tasks: ./xpack/security/elasticsearch-xpack-trial-activation.yml
  when: es_start_service and not oss_version and es_xpack_trial
  run_once: true

# perform security actions here now elasticsearch is started
- name: Include xpack/security/elasticsearch-security-native.yml
  ansible.builtin.include_tasks: ./xpack/security/elasticsearch-security-native.yml
  when: manage_native_realm | bool
  run_once: true

# Templates done after restart - handled by flushing the handlers. e.g. suppose user removes security on a running node and doesn't specify es_api_basic_auth_username and es_api_basic_auth_password.  The templates will subsequently not be removed if we don't wait for the node to restart.
# We also do after the native realm to ensure any changes are applied here first and its denf up.
- name: Include elasticsearch-template.yml
  ansible.builtin.include_tasks: elasticsearch-template.yml
  when: es_templates | bool
  tags:
    - templates
