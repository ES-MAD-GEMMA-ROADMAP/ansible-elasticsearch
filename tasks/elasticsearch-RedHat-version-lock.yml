---
- name: RedHat - install yum-version-lock
  become: true
  ansible.builtin.yum:
    name: yum-plugin-versionlock
    state: present
    update_cache: true

- name: RedHat - check if requested elasticsearch version lock exists
  become: true
  ansible.builtin.shell: 'yum versionlock list | grep {{ es_package_name }} | grep -c "{{ es_version }}"'
  register: es_requested_version_locked
  failed_when: false
  changed_when: false
  check_mode: false

- name: RedHat - lock elasticsearch version
  become: true
  ansible.builtin.shell: yum versionlock delete 0:elasticsearch* ; yum versionlock add {{ es_package_name }}-{{ es_version }}
  when:
    - es_version_lock
    - es_requested_version_locked is defined
    - es_requested_version_locked.stdout|int == 0

- name: RedHat - check if any elasticsearch version lock exists
  become: true
  ansible.builtin.shell: yum versionlock list | grep -c elasticsearch
  register: es_version_locked
  failed_when: false
  changed_when: false
  check_mode: false

- name: RedHat - unlock elasticsearch version
  become: true
  ansible.builtin.shell: yum versionlock delete 0:elasticsearch*
  when:
    - not es_version_lock
    - es_version_locked is defined
    - es_version_locked.stdout|int > 0
